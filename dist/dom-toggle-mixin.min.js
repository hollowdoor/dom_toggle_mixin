!function(e){"use strict";function t(e){var t=typeof Element;return"object"===t||"function"===t?e instanceof Element:!!e&&"object"==typeof e&&1===e.nodeType&&"string"==typeof e.nodeName}function n(e,n){if(void 0===n&&(n=document),"string"==typeof e)try{return n.querySelector(e)}catch(e){throw e}if(t(e))return e;if(e&&"object"==typeof e){if(t(e.element))return e.element;if(t(e[0]))return e[0]}throw new TypeError("value ("+e+") in isElement(value)\n    is not an element, valid css selector,\n    or object with an element property, or index 0.")}function i(e,t,n){void 0===n&&(n={});var i=s(t,n);return!e.dispatchEvent(i)}function o(e,t){if(void 0===t)return!0;var n=r(e.element);return t&&"none"===n||!t&&"none"!==n}function l(e,t,n){if(void 0===t){var o=r(e.element);e.element.style.display=n="none"===o?n:"none",t="none"!==n}else e.element.style.display=t?n:"none";return i(e.element,"toggled",{bubbles:!1}),t}function r(e){return e.style.display?e.style.display:window.getComputedStyle(e,null).display}var s=function(){try{return new Event("nothing"),function(e,t){return new Event(e,t)}}catch(e){}return function(e,t){var n=document.createEvent("Event");return n.initEvent(e,t.bubbles,t.cancelable),n}}();e.toggleMixin=function(e){e.initToggle=function(e){void 0===e&&(e={});var t=e.toggle;void 0===t&&(t=null);var i=e.display;void 0===i&&(i="block");var o=e.element;void 0===o&&(o=null),this._toggle=t,this._display=i,o&&(this.element=n(o))},e.toggleDisplay=function(e){return l(this,e,this._display)},e.toggle=function(e){var t=this;return o(this,e)?i(this.element,"beforetoggled",{bubbles:!1,cancelable:!0})?Promise.resolve("none"!==r(this.element)):this._toggle?Promise.resolve(this._toggle.call(this,!!e)).then(function(){return t.toggleDisplay(e)}):Promise.resolve(this.toggleDisplay(e)):Promise.resolve("none"!==r(this.element))}}}(this.domToggleMixin=this.domToggleMixin||{});
//# sourceMappingURL=dom-toggle-mixin.min.js.map
